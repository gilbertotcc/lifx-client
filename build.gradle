plugins {
  id 'java'
  id 'maven'
  id 'jacoco'
  id 'checkstyle'
  id 'com.jfrog.bintray' version '1.8.4'
  id 'maven-publish'
  id 'com.adarshr.test-logger' version '1.6.0'
}

group = 'com.github.gilbertotcc.lifx'
version = '1.0-SNAPSHOT'
description = 'lifx-client'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

wrapper {
  gradleVersion = '5.1'
}

repositories {
  mavenCentral()
}

dependencies {
  // RETROFIT
  compile 'com.squareup.retrofit2:retrofit:2.5.0'
  compile 'com.squareup.retrofit2:converter-jackson:2.5.0'

  // JACKSON
  compile 'com.fasterxml.jackson.core:jackson-core:2.9.8'
  compile 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
  compile 'com.fasterxml.jackson.core:jackson-annotations:2.9.8'
  compile 'com.fasterxml.jackson.module:jackson-module-parameter-names:2.9.8'
  compile 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.9.8'
  compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.8'

  // COMMOMN
  annotationProcessor 'org.projectlombok:lombok:1.18.4'
  compileOnly 'org.projectlombok:lombok:1.18.4'
  compile 'org.slf4j:slf4j-api:1.7.25'
  compile 'org.apache.commons:commons-lang3:3.7'
  compile 'com.squareup.okhttp3:logging-interceptor:3.10.0'
  compile 'com.google.code.findbugs:jsr305:3.0.2'

  // LOGGING
  compile 'ch.qos.logback:logback-classic:1.+'

  // LOGGING
  compile 'ch.qos.logback:logback-classic:1.+'

  // TEST
  testAnnotationProcessor 'org.projectlombok:lombok:1.18.4'
  testCompileOnly 'org.projectlombok:lombok:1.18.4'
  testCompile 'junit:junit:4.12'
  testCompile 'org.skyscreamer:jsonassert:1.5.0'
  testCompile 'org.mockito:mockito-core:2.23.4'
  testCompile 'com.github.tomakehurst:wiremock:2.18.0'
  testCompile 'com.tngtech.archunit:archunit-junit4:0.9.3'
}

jar {
  archiveBaseName = 'lifx-client'
}

test {
  // Exclude integration tests
  exclude '**/*IntegrationTest*'
}

jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        minimum = 0.95
      }
    }
  }
}

jacocoTestReport {
  reports {
    xml.enabled false
    csv.enabled false
    html.enabled true
    html.destination file("${buildDir}/reports/jacocoHtml")
  }
}

test.finalizedBy jacocoTestReport

// CHECKSTYLE

checkstyleMain.source = "src/main/java"
checkstyleTest.source = "src/test/java"

publishing {
  publications {
    maven(MavenPublication) {
      from components.java
    }
  }
}

bintray {
  user = System.getenv('BINTRAY_USERNAME')
  key = System.getenv('BINTRAY_API_KEY')
  publish = true
  publications = ['maven']
  pkg {
    repo = 'lifx'
    name = 'lifx-client'
    description = 'Java client to consume LIFX HTTP API'
    licenses = ['BSD 2-Clause']
    websiteUrl = 'https://github.com/gilbertotcc/lifx-client'
    vcsUrl = 'https://github.com/gilbertotcc/lifx-client.git'

    githubRepo = 'gilbertotcc/lifx-client'
    githubReleaseNotesFile = 'README.md'
  }
}
