version: 2

jobs:
  test:
      docker:
        - image: circleci/openjdk:11-jdk

      working_directory: ~/repo

      steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: ./gradlew dependencies
      - save_cache:
          paths:
          - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run:
          command: ./gradlew build -i -s --max-workers=1
          environment:
            JAVA_TOOL_OPTIONS: -Xmx512m
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
          destination: junit
      - store_artifacts:
          path: build/reports
          destination: reports

  deploy:
    docker:
      - image: circleci/openjdk:11-jdk

    working_directory: ~/repo

    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "build.gradle" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-
    - run: ./gradlew dependencies
    - save_cache:
        paths:
        - ~/.gradle
        key: v1-dependencies-{{ checksum "build.gradle" }}
    - run:
        command: ./gradlew build -i -s --max-workers=1
        environment:
          JAVA_TOOL_OPTIONS: -Xmx512m
    - run:
        name: Save test results
        command: |
          mkdir -p ~/junit/
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
        when: always
    - store_test_results:
        path: ~/junit
    - store_artifacts:
        path: ~/junit
        destination: junit
    - store_artifacts:
        path: build/reports
        destination: reports
    - run: ./gradlew bintrayUpload
    - store_artifacts:
        path: build/libs/
        destination: jars

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - master

