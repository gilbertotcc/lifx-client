version: 2

jobs:
  test:
      docker:
        - image: circleci/openjdk:11-jdk

      working_directory: ~/repo

      steps:

      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: ./gradlew dependencies

      - save_cache:
          paths:
          - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run:
          command: ./gradlew build -i -s --max-workers=1
          environment:
            JAVA_TOOL_OPTIONS: -Xmx512m

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

      - store_artifacts:
          path: ~/junit
          destination: junit

      - store_artifacts:
          path: build/reports
          destination: reports

  release:
    docker:
      - image: circleci/openjdk:11-jdk

    working_directory: ~/repo

    steps:

    - checkout

    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "build.gradle" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run: git config --global user.email "${GIT_USER_EMAIL}"
    - run: git config --global user.name "${GIT_USER_NAME}"
    - run: gradle release -Prelease.useAutomaticVersion=true -i

    - store_artifacts:
        path: build/libs/
        destination: jars

workflows:
  version: 2
  test-build-release:
    jobs:
      - test
      - release:
          requires:
            - test
          filters:
            branches:
              only:
                - master

